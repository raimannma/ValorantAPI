[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "valo_api"
version = "2.0.8"
description = "Valorant API Wrapper for https://github.com/Henrik-3/unofficial-valorant-api"
readme = "README.md"
authors = ["Manuel Raimann <raimannma@outlook.de>"]
license = "MIT"
repository = "https://github.com/raimannma/ValorantAPI"
homepage = "https://github.com/raimannma/ValorantAPI"

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.scripts]
"valo_api" = "valo_api.__main__:app"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
requests = "^2.32.3"
Pillow = ">=9.2,<11.0"
msgspec = ">=0.12,<0.19"
asyncio = {version = "^3.4.3", optional = true, extras = ["speedups"]}
aiohttp = {version = "^3.11.11", optional = true}

[tool.poetry.group.dev.dependencies]
bandit = "^1.8.2"
black = {version = ">=23.3,<25.0", allow-prereleases = true}
isort = "^5.13.2"
mypy = ">=0.991,<1.9"
mypy-extensions = ">=0.4.3,<1.1.0"
pre-commit = "^3.8.0"
pydocstyle = "^6.3.0"
pylint = ">=2.17.2,<4.0.0"
pytest = ">=7.3.1,<9.0.0"
hypothesis = "^6.124.1"
pyupgrade = "^3.19.1"
safety = ">=2.3.5,<4.0.0"
pytest-html = "^3.2.0"
pytest-cov = ">=4,<6"
Sphinx = ">=5.3,<8.0"
sphinxcontrib-applehelp = "^1.0.8"
sphinxcontrib-devhelp = ">=1.0.6,<3.0.0"
sphinxcontrib-htmlhelp = "^2.1.0"
sphinxcontrib-jsmath = "^1.0.1"
sphinxcontrib-qthelp = "^1.0.8"
sphinxcontrib-serializinghtml = "^1.1.10"
sphinx-rtd-theme = ">=1.1.1,<3.0.0"
sphinx-autodoc-typehints = ">=1.19.5,<3.0.0"
autodocsumm = "^0.2.12"
responses = ">=0.22,<0.26"
pytest-parallel = "^0.1.1"
pytest-split = "^0.8.2"
tomlkit = "<0.13.1"
colorama = "^0.4.6"
aioresponses = "^0.7.6"
pytest-asyncio = ">=0.20.3,<0.24.0"

[tool.poetry.extras]
async = [
    "aiohttp",
    "asyncio",
]

[tool.black]
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
py_version = 38
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true


[tool.pytest.ini_options]
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "valo_api"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
